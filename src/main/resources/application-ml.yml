spring:
  datasource:
    url: "jdbc:postgresql://localhost/phoehne"
    username: "phoehne"
    password: "phoehne"

ml:
  host: localhost
  port: 8700
  username: phoehne
  password: gl27d93j

logging:
  level: DEBUG

transform:
  xquery: |
            xquery version "1.0-ml";
            import module namespace t="http://vision.dha.mil/lib/patient.xqy" at "/ext/lib/patient.xqy";
            declare variable $uri as xs:string external;
            t:transform($uri)

sql:
  patients: |
               SELECT P.patient_id, P.first_name, P.middle_name, P.last_name,
               P.oef_oif_ind, P.birth_date, P.death_date, G.name AS GENDER,
               E.name AS ETHNICITY, M.name AS MARITALSTATUS, R.name AS RACE,
               S.name AS SERVICEBRANCH, P.zip_plus_4, P.lastserviceseparationdate,
               P.enrollment_date, P.edipn, SR.name AS SERVICE_STATUS,
               L.name AS LIVING_ARANGEMENTS, P.unit, P.occupation,
               P.job_description, MS.name AS MILITARY_STATUS, P.CATEGORY,
               P.suffix, p.updated, p.created
               FROM patient P LEFT JOIN std_gender G ON P.std_gender_id = G.id
                LEFT JOIN std_ethnicity E ON P.std_ethnicity_id = E.id
                LEFT JOIN std_maritalstatus M ON P.std_maritalstatus_id = M.id
                LEFT JOIN STD_RACE R ON P.std_race_id = R.id
                LEFT JOIN std_service_branch S ON P.std_servicebranch_id = S.id
                LEFT JOIN std_service_status SR ON P.std_service_status_id = SR.id
                LEFT JOIN std_living_arrangements_type L ON P.std_living_arrangements_type_id = L.id
                LEFT JOIN std_military_status_type MS ON P.std_military_status_type_id = MS.ID
               ORDER BY p.updated ASC
               LIMIT 5000
  encounters: |
                SELECT E.referral_id, E.provider_id, E.sta6a, E.visit_date, E.chief_complaint_text,
                   E.tbi_ind, E.tbi_read_problem_ind, E.tbi_diplopia_ind, E.tbi_dazzling_ind,
                   E.tbi_photophobia_ind, E.other_neurological_ind, E.neurological_comment_text,
                   E.diagnosis_summary_comment_text, E.procedure_summary_comment_text,
                   E.currently_hospitalized_ind, E.tbi_eye_strain_ind, E.tbi_blurred_vision_ind,
                   E.primaryclinicstopdesc, E.primaryclinicstop, E.followup, E.duplicate,
                   E.std_encounter_type_id, E.history_of_present_illness_text,
                   M.name AS MARITALSTATUS, S.name AS SERVICEBRANCH, SR.name SERVICE_STATUS,
                   ED.occupation, ED.job_description
                FROM encounter_demographics ED LEFT JOIN encounter E on ED.encounter_id = E.encounter_id
                   LEFT JOIN std_maritalstatus M ON ED.std_maritalstatus_id = M.id
                   LEFT JOIN std_service_branch S ON ED.std_servicebranch_id = S.id
                   LEFT JOIN std_service_status SR ON ED.std_service_status_id = SR.id
                WHERE ED.patient_id = ?


sqlxml:
  patients: |
               select XMLELEMENT(NAME "patients",
                 XMLAGG(
                     XMLELEMENT(NAME "patient",
                       XMLELEMENT(NAME "patientId",          p.patient_id),
                       XMLELEMENT(NAME "firstName",          p.first_name),
                       XMLELEMENT(NAME "lastname",           p.last_name),
                       XMLELEMENT(NAME "middleName",         p.middle_name),
                       XMLELEMENT(NAME "oefOifInd",          p.oef_oif_ind),
                       XMLELEMENT(NAME "birthDate",          p.birth_date),
                       XMLELEMENT(NAME "deathDate",          p.death_date),
                       XMLELEMENT(NAME "gender",             g.name),
                       XMLELEMENT(NAME "ethnicity",          e.name),
                       XMLELEMENT(NAME "maritalStatus",      m.name),
                       XMLELEMENT(NAME "race",               r.name),
                       XMLELEMENT(NAME "serviceBranch",      s.name),
                       XMLELEMENT(NAME "zipPlusFour",        p.zip_plus_4),
                       XMLELEMENT(NAME "lastServiceSeparationDate", p.lastserviceseparationdate),
                       XMLELEMENT(NAME "enrollmentDate",     p.enrollment_date),
                       XMLELEMENT(NAME "edipn",              p.edipn),
                       XMLELEMENT(NAME "serviceStatus",      sr.name),
                       XMLELEMENT(NAME "livingArangements",  l.name),
                       XMLELEMENT(NAME "unit",               p.unit),
                       XMLELEMENT(NAME "occupation",         p.occupation),
                       XMLELEMENT(NAME "jobDescription",     p.job_description),
                       XMLELEMENT(NAME "militaryStatus",     ms.name),
                       XMLELEMENT(NAME "category",           p."CATEGORY"),
                       XMLELEMENT(NAME "suffix",             p.suffix)
                     )
                 )
               )
               FROM patient P LEFT JOIN std_gender G ON P.std_gender_id = G.id
               LEFT JOIN std_ethnicity E ON P.std_ethnicity_id = E.id
               LEFT JOIN std_maritalstatus M ON P.std_maritalstatus_id = M.id
               LEFT JOIN STD_RACE R ON P.std_race_id = R.id
               LEFT JOIN std_service_branch S ON P.std_servicebranch_id = S.id
               LEFT JOIN std_service_status SR ON P.std_service_status_id = SR.id
               LEFT JOIN std_living_arrangements_type L ON P.std_living_arrangements_type_id = L.id
               LEFT JOIN std_military_status_type MS ON P.std_military_status_type_id = MS.ID
               GROUP BY p.patient_id
                 order by p.patient_id
               LIMIT 5000